# Generated by Django 3.2 on 2024-01-11 14:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields
import utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('car', '0001_initial'),
        ('info', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('address', models.CharField(max_length=100, verbose_name='Адрес')),
                ('image', models.ImageField(upload_to='business_images/', verbose_name='Фотография')),
                ('telegram', models.CharField(blank=True, max_length=100, null=True, verbose_name='Telegram')),
                ('instagram', models.CharField(blank=True, max_length=100, null=True, verbose_name='Instagram')),
                ('tiktok', models.CharField(blank=True, max_length=100, null=True, verbose_name='TikTok')),
                ('whatsapp', models.CharField(blank=True, max_length=20, null=True, verbose_name='WhatsApp')),
                ('first_phone_number', models.CharField(max_length=30, verbose_name='Первый рабочий номер')),
                ('second_phone_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Второй рабочий номер')),
                ('third_phone_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Третий рабочий номер')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('types_of_purchase_requests', models.CharField(choices=[('by_common_parts', 'По общим деталям'), ('by_car_brands', 'По марке автомобилей'), ('all_requests', 'Все заявки')], default='all_requests', max_length=50, verbose_name='Виды заявок')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Баланс')),
                ('tariff_end_day', models.DateField(blank=True, null=True, verbose_name='День окончания тарифа')),
                ('car_brands', models.ManyToManyField(blank=True, related_name='businesses', to='car.CarBrand', verbose_name='Марки машин')),
                ('common_parts', models.ManyToManyField(blank=True, related_name='businesses', to='car.Part', verbose_name='Общие запчасти')),
            ],
            options={
                'verbose_name': 'Бизнес',
                'verbose_name_plural': 'Бизнесы',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('title', models.CharField(db_index=True, max_length=200, verbose_name='Название')),
                ('address', models.CharField(max_length=100, verbose_name='Адрес')),
                ('comment', models.TextField(default='', verbose_name='Комментарий')),
                ('work_days', multiselectfield.db.fields.MultiSelectField(choices=[(1, 'Понедельник'), (2, 'Вторник'), (3, 'Среда'), (4, 'Четверг'), (5, 'Пятница'), (6, 'Суббота'), (7, 'Воскресенье')], max_length=7, verbose_name='Рабочие дни')),
                ('image', models.ImageField(upload_to=utils.custom_upload_path, verbose_name='Фотография')),
                ('start_time', models.TimeField(verbose_name='Время начала работы')),
                ('end_time', models.TimeField(verbose_name='Время конца работы')),
                ('telegram', models.CharField(blank=True, max_length=100, null=True, verbose_name='Telegram')),
                ('instagram', models.CharField(blank=True, max_length=100, null=True, verbose_name='Instagram')),
                ('tiktok', models.CharField(blank=True, max_length=100, null=True, verbose_name='TikTok')),
                ('whatsapp', models.CharField(blank=True, max_length=20, null=True, verbose_name='WhatsApp')),
                ('first_phone_number', models.CharField(max_length=30, verbose_name='Первый рабочий номер')),
                ('second_phone_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Второй рабочий номер')),
                ('third_phone_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Третий рабочий номер')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='business.business', verbose_name='Бизнес')),
            ],
            options={
                'verbose_name': 'Сервис',
                'verbose_name_plural': 'Сервисы',
            },
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=100, verbose_name='Название')),
                ('image', models.ImageField(upload_to=utils.custom_upload_path, verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Категория сервисов',
                'verbose_name_plural': 'Категории сервисов',
            },
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('logo', models.ImageField(null=True, upload_to=utils.custom_upload_path, verbose_name='Логотип')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Старая цена')),
                ('car_brands_count', models.PositiveSmallIntegerField(verbose_name='Количество марок автомобиля')),
                ('common_parts_count', models.PositiveSmallIntegerField(verbose_name='Количество общих деталей')),
                ('is_first', models.BooleanField(default=False, verbose_name='Отображать первыми')),
            ],
            options={
                'verbose_name': 'Тариф',
                'verbose_name_plural': 'Тарифы',
                'ordering': ('is_first',),
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('type_of_transaction', models.CharField(choices=[('deposit', 'Пополнение'), ('withdrawal', 'Снятие')], max_length=10)),
                ('success', models.BooleanField(default=False)),
                ('description', models.TextField()),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='business.business')),
            ],
        ),
        migrations.CreateModel(
            name='TariffDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание')),
                ('icon', models.ImageField(upload_to=utils.custom_upload_path, verbose_name='Значок описания')),
                ('tariff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='descriptions', to='business.tariff', verbose_name='Тариф')),
            ],
            options={
                'verbose_name': 'Описание тарифа',
                'verbose_name_plural': 'Описания тарифа',
            },
        ),
        migrations.CreateModel(
            name='ServiceViewLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='view_logs', to='business.service', verbose_name='Сервис')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='view_logs', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Просмотры сервиса',
                'verbose_name_plural': 'Просмотры сервиса',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ServiceSubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=100, verbose_name='Название')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sub_categories', to='business.servicecategory', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Подкатегория сервисов',
                'verbose_name_plural': 'Подкатегории сервисов',
            },
        ),
        migrations.AddField(
            model_name='service',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services', to='business.servicecategory', verbose_name='Категория сервиса'),
        ),
        migrations.AddField(
            model_name='service',
            name='region',
            field=models.ManyToManyField(related_name='services', to='info.Region', verbose_name='Регион'),
        ),
        migrations.AddField(
            model_name='service',
            name='sub_category',
            field=models.ForeignKey(blank=True, help_text='Если выбрана подкатегория, то сервис будет отображаться только в подкатегории. В категории сервиса она отображаться не будет', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services', to='business.servicesubcategory', verbose_name='Подкатегория сервиса'),
        ),
        migrations.AddField(
            model_name='business',
            name='tariff',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='businesses', to='business.tariff', verbose_name='Тариф'),
        ),
        migrations.AddField(
            model_name='business',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
    ]
