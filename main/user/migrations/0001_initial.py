# Generated by Django 3.2 on 2023-11-15 12:39

from django.db import migrations, models
import user.managers
import utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('phone_number', models.CharField(max_length=30, unique=True, verbose_name='Номер телефона')),
                ('new_phone_number', models.CharField(blank=True, max_length=30, null=True, unique=True, verbose_name='Новый номер телефона')),
                ('name', models.CharField(blank=True, max_length=30, verbose_name='ФИО')),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to=utils.custom_upload_path, verbose_name='Фото профиля')),
                ('verification_code', models.CharField(blank=True, max_length=6, null=True, verbose_name='Код активации')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('is_staff', models.BooleanField(default=False, help_text='Определяет, может ли пользователь войти на этот сайт администрирования.', verbose_name='Статус staff')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', user.managers.UserManager()),
            ],
        ),
    ]
